# Generated by Django 3.1.2 on 2021-02-17 20:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.core.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('account_type', models.IntegerField(choices=[(0, 'Root'), (1, 'Администратор'), (2, 'Учитель'), (3, 'Ученик')], default=3, verbose_name='Тип аккаунта')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Администратор')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, default='', max_length=100, verbose_name='Отчество')),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('registration_date', models.DateField(auto_now_add=True, null=True, verbose_name='Дата регистрации')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'permissions': [('edit_news', 'Может редактировать статьи в новостном блоке.')],
            },
            managers=[
                ('objects', apps.core.users.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Время отправки')),
                ('subject', models.CharField(max_length=100, verbose_name='Тема сообщения')),
                ('content', models.TextField(max_length=4000, verbose_name='Текст сообщения')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитанное')),
            ],
            options={
                'verbose_name': 'Сообщение администратору',
                'verbose_name_plural': 'Сообщения администратору',
                'ordering': ['date', 'subject'],
            },
        ),
        migrations.CreateModel(
            name='Controls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Вид работы')),
                ('weight', models.FloatField(default=1, verbose_name='Коэффицент')),
                ('notify', models.BooleanField(default=False, verbose_name='Оповещать учеников')),
                ('default', models.BooleanField(default=False, verbose_name='Вид работы по умолчанию')),
            ],
            options={
                'verbose_name': 'Вид работы',
                'verbose_name_plural': 'Виды работ',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Quarters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(choices=[(1, 'I'), (2, 'II'), (3, 'III'), (4, 'IV')], unique=True, verbose_name='Четверть')),
                ('begin', models.DateField(verbose_name='Начало четверти')),
                ('end', models.DateField(verbose_name='Конец четверти')),
            ],
            options={
                'verbose_name': 'Четверть',
                'verbose_name_plural': 'Четверти',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('icon', models.ImageField(blank=True, upload_to='subject_icons/', verbose_name='Иконка')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='admin', serialize=False, to='core.users', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
            },
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to='core.users', verbose_name='Пользователь')),
                ('president', models.BooleanField(default=False, verbose_name='Староста')),
            ],
            options={
                'verbose_name': 'Ученик',
                'verbose_name_plural': 'Ученики',
                'ordering': ['klass'],
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacher', serialize=False, to='core.users', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Учитель',
                'verbose_name_plural': 'Учителя',
            },
        ),
        migrations.CreateModel(
            name='Lessons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('theme', models.CharField(blank=True, max_length=120, verbose_name='Тема')),
                ('is_planned', models.BooleanField(default=False, verbose_name='Запланирован')),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.controls', verbose_name='Контроль')),
                ('group', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.groups', verbose_name='Группа')),
                ('quarter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.quarters', verbose_name='Четверть')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Klasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)], verbose_name='Класс')),
                ('letter', models.CharField(choices=[('А', 'А'), ('Б', 'Б'), ('В', 'В'), ('Г', 'Г'), ('Д', 'Д'), ('Е', 'Е'), ('Ж', 'Ж'), ('З', 'З'), ('И', 'И'), ('К', 'К')], max_length=2, verbose_name='Буква')),
                ('subjects', models.ManyToManyField(to='core.Subjects', verbose_name='Предметы')),
            ],
            options={
                'verbose_name': 'Класс',
                'verbose_name_plural': 'Классы',
                'ordering': ['number', 'letter'],
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='Задание')),
                ('h_file', models.FileField(blank=True, default=None, null=True, upload_to=apps.core.models.homework_upload, verbose_name='Файл')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.lessons', verbose_name='Урок')),
            ],
            options={
                'verbose_name': 'Домашнее задание',
                'verbose_name_plural': 'Домашние задания',
            },
        ),
        migrations.AddField(
            model_name='groups',
            name='klass',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.klasses', verbose_name='Класс'),
        ),
        migrations.AddField(
            model_name='groups',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.subjects', verbose_name='Предмет'),
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=None, null=True, verbose_name='Балл')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.lessons', verbose_name='Урок')),
            ],
            options={
                'verbose_name_plural': 'Оценки',
                'ordering': ['lesson'],
            },
        ),
        migrations.AddConstraint(
            model_name='controls',
            constraint=models.UniqueConstraint(condition=models.Q(default=True), fields=('default',), name='unique_default_control'),
        ),
        migrations.AddField(
            model_name='adminmessages',
            name='sender',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Отправитель'),
        ),
        migrations.AddField(
            model_name='users',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='users',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='teachers',
            name='subjects',
            field=models.ManyToManyField(to='core.Subjects', verbose_name='Предметы'),
        ),
        migrations.AddField(
            model_name='students',
            name='klass',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.klasses', verbose_name='Класс'),
        ),
        migrations.AddField(
            model_name='klasses',
            name='head_teacher',
            field=models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='klass', to='core.teachers', verbose_name='Классный руководитель'),
        ),
        migrations.AddField(
            model_name='klasses',
            name='teachers',
            field=models.ManyToManyField(related_name='klasses', to='core.Teachers', verbose_name='Учителя'),
        ),
        migrations.AddField(
            model_name='groups',
            name='students',
            field=models.ManyToManyField(to='core.Students', verbose_name='Отображаемые ученики'),
        ),
        migrations.AddField(
            model_name='grades',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.students', verbose_name='Ученик'),
        ),
        migrations.AlterUniqueTogether(
            name='klasses',
            unique_together={('number', 'letter')},
        ),
        migrations.AlterUniqueTogether(
            name='groups',
            unique_together={('klass', 'subject')},
        ),
    ]
